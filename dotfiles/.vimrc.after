colors hybrid

python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup

set autoread
set numberwidth=1
set noshowmode
set nobackup
set nowritebackup
set noswapfile
set updatetime=500

nmap F :FixWhitespace<CR>
nmap q<CR> :tabclose<CR>
map r :redo<CR>
map U :GundoToggle<CR>
map <c-e> :CtrlP<CR>
map <leader><c-e> :CtrlPTag<CR>
map <c-t> :TagbarToggle<CR>
vmap <c-y> "+y
nmap <c-y> "+yy
map <c-p> "+p
map <c-\> :pop<CR>
map <leader>b :BuffergatorToggle<CR>
map <leader>t :BuffergatorTabsToggle<CR>

let NERDTreeMinimalUI=1
let g:gundo_right=1
let g:gist_detect_filetype=1
let g:gist_show_privates=1
let g:gist_post_private=1
let g:tagbar_compact=1

hi NonText ctermfg=234
hi VertSplit ctermfg=238

let &colorcolumn=join(range(81,81),",")
hi ColorColumn ctermbg=235

au InsertEnter * set cursorline
au InsertLeave * set nocursorline

let g:ctrlp_by_filename = 1

function OpenInNewTab()
  let l:winview = winsaveview()
  execute 'tabnew %'
  call winrestview(l:winview)
endfunction
nmap f<CR> :call OpenInNewTab()<CR>

function Task()
  let branch = system('git rev-parse --abbrev-ref HEAD')
  let task_id = substitute(branch, '\D*_\(\d*\)\(.*\)', '\1', '')
  return "[".task_id."](https://www.pivotaltracker.com/story/show/".task_id.")"
endfunction

command Branch :read !git rev-parse --abbrev-ref HEAD
command Task :call setline(line('.'), Task())
